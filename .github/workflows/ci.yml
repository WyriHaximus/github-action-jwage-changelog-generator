name: Continuous Integration
env:
  DOCKER_IMAGE: wyrihaximusgithubactions/jwage-changelog-generator
  DOCKER_BUILDKIT: 1
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  generate-ref:
    name: Generate Ref
    runs-on: ubuntu-latest
    outputs:
      REF: ${{ steps.generate-ref.outputs.ref }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - id: generate-ref
        name: Generate Ref
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ] ; then
            ref=$(php -r "echo str_replace('/', '-SLASH-', '${{ github.event.pull_request.head.ref }}');")
            echo "$ref"
            printf "::set-output name=ref::%s" $ref
            exit 0
          fi
          echo "${GITHUB_REF##*/}"
          echo "ref=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
  lint-dockerfile:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Lint Dockerfile
        uses: docker://hadolint/hadolint:latest-debian
        with:
          entrypoint: hadolint
          args: Dockerfile-build
  build-docker-image:
    name: Build Docker image
    needs:
      - generate-ref
      - lint-dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Login to GitHub Container Registry
        if: github.actor != 'dependabot[bot]'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
          docker login ghcr.io \
            --username "${GITHUB_ACTOR}" \
            --password-stdin
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
        with:
          install: true
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - run: docker version
      - run: docker images
        env:
          REF: ${{ needs.generate-ref.outputs.ref }}
      - run: docker build --platform=linux/arm64,linux/amd64 --output=type=registry --no-cache -t "$(echo "ghcr.io/${GITHUB_REPOSITORY}:${{ needs.generate-ref.outputs.ref }}" | tr '[:upper:]' '[:lower:]')" ./ -f Dockerfile-build --target=runtime
      - run: |
          printf "FROM %s" $(echo "ghcr.io/${GITHUB_REPOSITORY}:${{ needs.generate-ref.outputs.ref }}" | tr '[:upper:]' '[:lower:]') >> Dockerfile.tag
          docker build --platform=linux/arm64,linux/amd64 --output=type=registry --no-cache -f Dockerfile.tag -t $(echo "ghcr.io/${GITHUB_REPOSITORY}:sha-${GITHUB_SHA}" | tr '[:upper:]' '[:lower:]') .
      - run: docker images
  generate-changelog:
    name: Generate Changelog
    needs:
      - build-docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - run: sed -i $(echo "s/master/sha-$GITHUB_SHA/g") Dockerfile
      - name: Generate changelog
        uses: ./
        id: changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          milestone: "v1.0.0"
      - name: Show changelog
        run: echo "${CHANGELOG}"
        env:
          CHANGELOG: ${{ steps.changelog.outputs.changelog }}
  generate-changelog-labels:
    name: Generate Changelog Labels
    needs:
      - build-docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - run: sed -i $(echo "s/master/sha-$GITHUB_SHA/g") Dockerfile
      - name: Generate changelog
        uses: ./
        id: changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          milestone: "v1.0.0"
          labels: "Bug üêû,Feature üèó,Enhancement ‚ú®"
      - name: Show changelog
        run: echo "${CHANGELOG}"
        env:
          CHANGELOG: ${{ steps.changelog.outputs.changelog }}
